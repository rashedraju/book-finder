{"version":3,"sources":["hoc/AsyncImage.js","components/Button/Button.styled.js","components/Button/Button.js","components/BookPreview/BookPreview.styled.js","components/BookPreview/BookPreview.js","containers/Book/Book.js","utils/constants.js"],"names":["AsyncImage","props","src","alt","useState","loadedSrc","setLoadedSrc","useEffect","loadSrc","image","Image","addEventListener","removeEventListener","btnStyle","css","ButtonPrimary","styled","button","theme","colors","primary","main","text","center","ButtonOutline","white","Button","variant","style","onClick","children","StyledBookPreview","article","dark","breakpoint","tablet","ImageWraper","figure","DetailsWrapper","div","Title","h1","Author","p","Description","BookPreview","book","onMyShelfAction","title","authors","description","addedToMyShelf","Skeleton","animation","width","height","margin","marginBottom","Array","fill","map","_","i","Book","params","useParams","setBook","isOpen","message","notification","setNotification","useBook","addToMyShelf","removeFromMyShelf","isAddedToMyShelf","getBookPreview","useCallback","id","a","axios","get","SEARCH_BY_ID","response","volume","data","volumeInfo","bookData","join","imageLinks","thumbnail","handleShowNotification","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","bookId","bookObject","notificationMessage","handleAddToMyShelf","SEARCH_BY_QUERY"],"mappings":"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","file":"static/js/8.02c9894e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst AsyncImage = (props) => {\r\n    const { src, alt } = props;\r\n    const [loadedSrc, setLoadedSrc] = useState();\r\n\r\n    useEffect(() => {\r\n        const loadSrc = () => {\r\n            setLoadedSrc(src);\r\n        };\r\n\r\n        if (src) {\r\n            const image = new Image();\r\n            image.addEventListener('load', loadSrc);\r\n            image.src = src;\r\n\r\n            return () => {\r\n                image.removeEventListener('load', loadSrc);\r\n            };\r\n        }\r\n\r\n        return () => {};\r\n    }, [src]);\r\n\r\n    if (loadedSrc === src) {\r\n        return <img src={src} alt={alt} />;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nAsyncImage.propTypes = {\r\n    src: PropTypes.string,\r\n    alt: PropTypes.string\r\n};\r\n\r\nexport default AsyncImage;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst btnStyle = css`\r\n    padding: 0.5rem 1rem;\r\n    font-size: 1rem;\r\n`;\r\n\r\nexport const ButtonPrimary = styled.button`\r\n    ${btnStyle};\r\n    background-color: ${({ theme }) => theme.colors.primary.main};\r\n    color: ${({ theme }) => theme.colors.text};\r\n    ${({ center }) => center && 'display: block; margin: 0 auto'};\r\n`;\r\n\r\nexport const ButtonOutline = styled.button`\r\n    ${btnStyle};\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    color: ${({ theme }) => theme.colors.primary.main};\r\n    border: 1px solid ${({ theme }) => theme.colors.primary.main};\r\n    ${({ center }) => center && 'display: block; margin: 0 auto'};\r\n`;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { ButtonOutline, ButtonPrimary } from './Button.styled';\r\n\r\nconst Button = (props) => {\r\n    const { variant, style = {}, center = false, onClick, children } = props;\r\n    if (variant === 'outline')\r\n        return (\r\n            <ButtonOutline onClick={onClick} style={style} center={center ? 1 : 0}>\r\n                {' '}\r\n                {children}{' '}\r\n            </ButtonOutline>\r\n        );\r\n\r\n    return (\r\n        <ButtonPrimary onClick={onClick} center={center ? 1 : 0} style={style}>\r\n            {' '}\r\n            {children}{' '}\r\n        </ButtonPrimary>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    variant: PropTypes.string,\r\n    style: PropTypes.instanceOf(Object),\r\n    center: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledBookPreview = styled.article`\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    padding: 1rem;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    color: ${({ theme }) => theme.colors.dark};\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.tablet}) {\r\n        flex-direction: column;\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\nexport const ImageWraper = styled.figure`\r\n    width: 40%;\r\n    text-align: center;\r\n    img {\r\n        border: 2px solid ${({ theme }) => theme.colors.primary.main};\r\n        padding: 1rem;\r\n        height: 15rem;\r\n        transform-origin: 0 0 0;\r\n        transition: transform 0.2s ease;\r\n        &:hover {\r\n            transform: rotateY(-20deg);\r\n        }\r\n    }\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.tablet}) {\r\n        width: 100%;\r\n        span {\r\n            margin: 0 auto;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DetailsWrapper = styled.div`\r\n    width: 60%;\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.tablet}) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Author = styled.p`\r\n    small {\r\n        color: ${({ theme }) => theme.colors.primary.main};\r\n    }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n    margin: 1rem 0;\r\n`;\r\n","import { Skeleton } from '@mui/material';\r\nimport React from 'react';\r\nimport AsyncImage from '../../hoc/AsyncImage';\r\nimport Button from '../Button/Button';\r\nimport {\r\n    Author,\r\n    Description,\r\n    DetailsWrapper,\r\n    ImageWraper,\r\n    StyledBookPreview,\r\n    Title\r\n} from './BookPreview.styled';\r\n\r\nconst BookPreview = ({ book, onMyShelfAction }) => (\r\n    <StyledBookPreview>\r\n        {book ? (\r\n            <>\r\n                <ImageWraper>\r\n                    <AsyncImage src={book.image} alt={book.title} />\r\n                </ImageWraper>\r\n                <DetailsWrapper>\r\n                    <Title>{book.title}</Title>\r\n                    <Author>\r\n                        <span>by</span> <small>{book.authors}</small>\r\n                    </Author>\r\n                    <Description>{book.description}</Description>\r\n                    <Button onClick={onMyShelfAction} center>\r\n                        {book.addedToMyShelf ? 'Remove from my shelf' : 'Add to my shelf'}\r\n                    </Button>\r\n                </DetailsWrapper>\r\n            </>\r\n        ) : (\r\n            <>\r\n                <ImageWraper>\r\n                    <Skeleton\r\n                        variant=\"rectangular\"\r\n                        animation=\"wave\"\r\n                        width=\"40%\"\r\n                        height={200}\r\n                        style={{ margin: '0 auto' }}\r\n                    />\r\n                </ImageWraper>\r\n                <DetailsWrapper>\r\n                    <Skeleton\r\n                        variant=\"text\"\r\n                        animation=\"wave\"\r\n                        width=\"100%\"\r\n                        height={20}\r\n                        style={{ marginBottom: '0.5rem' }}\r\n                    />\r\n                    <Skeleton\r\n                        variant=\"text\"\r\n                        animation=\"wave\"\r\n                        width=\"90%\"\r\n                        height={10}\r\n                        style={{ marginBottom: '1rem' }}\r\n                    />\r\n                    {new Array(5).fill(0).map((_, i) => (\r\n                        <Skeleton\r\n                            // eslint-disable-next-line react/no-array-index-key\r\n                            key={`skeleton-${i}`}\r\n                            variant=\"text\"\r\n                            animation=\"wave\"\r\n                            width=\"100%\"\r\n                            height={10}\r\n                        />\r\n                    ))}\r\n                </DetailsWrapper>\r\n            </>\r\n        )}\r\n    </StyledBookPreview>\r\n);\r\n\r\nexport default BookPreview;\r\n","import { Snackbar } from '@mui/material';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Section } from '../../assets/styles/Component.styled';\r\nimport BookPreview from '../../components/BookPreview/BookPreview';\r\nimport { useBook } from '../../contexts/BookContext';\r\nimport { SEARCH_BY_ID } from '../../utils/constants';\r\n\r\nconst Book = () => {\r\n    const params = useParams();\r\n    const [book, setBook] = useState();\r\n    const [notification, setNotification] = useState({\r\n        isOpen: false,\r\n        message: ''\r\n    });\r\n    const { addToMyShelf, removeFromMyShelf, isAddedToMyShelf } = useBook();\r\n\r\n    const getBookPreview = useCallback(\r\n        async (id) => {\r\n            try {\r\n                const response = await axios.get(`${SEARCH_BY_ID}${id}`);\r\n\r\n                const volume = response.data.volumeInfo;\r\n                const bookData = {\r\n                    id: response.data.id ?? '',\r\n                    addedToMyShelf: isAddedToMyShelf(response.data.id),\r\n                    title: volume.title ?? '',\r\n                    authors: volume.authors?.join(', '),\r\n                    image: volume.imageLinks.thumbnail ?? '',\r\n                    description: volume.description ?? ''\r\n                };\r\n                setBook(bookData);\r\n            } catch (err) {\r\n                //\r\n            }\r\n        },\r\n        [isAddedToMyShelf]\r\n    );\r\n\r\n    const handleShowNotification = (message) => {\r\n        setNotification({ isOpen: true, message });\r\n    };\r\n\r\n    const handleHideNotification = () => {\r\n        setNotification({ isOpen: false, message: '' });\r\n    };\r\n\r\n    const handleRemoveFromMyShelf = (bookId) => {\r\n        removeFromMyShelf(bookId);\r\n        handleShowNotification('Successfully removed');\r\n    };\r\n\r\n    const handleAddToMyShelf = (bookObject) => {\r\n        let notificationMessage = '';\r\n\r\n        if (addToMyShelf(bookObject)) {\r\n            notificationMessage = 'Book is added to shelf';\r\n        } else {\r\n            notificationMessage = 'Failed to add Book on shelf';\r\n        }\r\n\r\n        handleShowNotification(notificationMessage);\r\n    };\r\n\r\n    const handleMyShelfAction = () => {\r\n        if (isAddedToMyShelf(book.id)) {\r\n            handleRemoveFromMyShelf(book.id);\r\n        } else {\r\n            handleAddToMyShelf(book);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getBookPreview(params.id);\r\n    }, [params.id, getBookPreview]);\r\n\r\n    return (\r\n        <Section>\r\n            <Snackbar\r\n                open={notification.isOpen}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                autoHideDuration={3000}\r\n                onClose={handleHideNotification}\r\n                message={notification.message}\r\n            />\r\n\r\n            <BookPreview book={book} onMyShelfAction={handleMyShelfAction} />\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default Book;\r\n","export const SEARCH_BY_QUERY = 'https://www.googleapis.com/books/v1/volumes?q=';\r\nexport const SEARCH_BY_ID = 'https://www.googleapis.com/books/v1/volumes/';\r\n"],"sourceRoot":""}